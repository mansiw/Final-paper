polintr = $$\alpha 1 +
setwd('C:/Users/hp/Documents/GitHub')
d <- read.csv('ESS1-7e01.csv') # ESS Data on Political Engagement
d <- read.csv('ESS1-7e01.csv') # ESS Data on Political Engagement
e <- read.csv('Under 25 unemp.csv', stringsAsFactors = F) # Eurostat Data on Unemployment
df <- subset(d, d$agea <= 25 & d$agea >= 18) # Limit ESS data to indiivduals 18 - 25
eu <- subset(e, e$AGE == "Less than 25 years") # Limit unemployment data to individuals under 25
eu <- subset(eu, eu$UNIT == "Percentage of active population") # Limit the to single statistic
eu <- subset(eu, eu$TIME == 2006 |eu$TIME == 2008 |eu$TIME == 2010 |eu$TIME == 2012| eu$TIME == 2014) # Limit to only years in which Eurostat survey occurred
dropnames <- c("Euro area (18 countries)", "Euro area (19 countries)", "European Union (28 countries)", "Euro area (EA11-2000, EA12-2006, EA13-2007, EA15-2008, EA16-2010, EA17-2013, EA18-2014, EA19)", "European Union (25 countries)", "European Union (27 countries)")
eu <- eu[! eu$GEO %in% dropnames, ]
## Change name of Germany ##
eu$GEO[eu$GEO=="Germany (until 1990 former territory of the FRG)"] <- "Germany"
## Removing Undesired Countries from ESS Dataset ##
temp <- with(df, which(df$cntry == "AT" | df$cntry == "HR" | df$cntry == "IS" | df$cntry == "LT" | df$cntry == "LU" | df$cntry == "RU" | df$cntry == "TR" | df$cntry == "UA" | df$cntry == "IL", arr.ind=TRUE))
df <- df[-temp, ]
table(df$cntry) # check to see country names remaining
temp2 <- with(eu, which(eu$GEO == "Japan" | eu$GEO == "Turkey" | eu$GEO == "United States" | eu$GEO == "Austria" | eu$GEO == "Croatia" | eu$GEO == "United States" | eu$GEO == "Iceland" | eu$GEO == "Lithuania" | eu$GEO == "Luxembourg" | eu$GEO == "Latvia" | eu$GEO == "Romania" | eu$GEO == "Malta" | eu$GEO == "Switzerland",  arr.ind=TRUE))
eu <- eu[-temp2, ]
ESSVariables <-c("cntry", "essround", "polintr","trstprl", "trstplt","trstep","vote","contplt","wrkprty","wrkorg","badge","sgnptit","pbldmn","bctprd","clsprty","mmbprty","uempla", "uempli","dsbld", "mbtru","mainact","wrkctra","gndr","stfdem","pdjobev","eisced")
ESSData <- df[ESSVariables]
table(ESSData$cntry)
ESSData$polintr[ESSData$polintr > 4] <- NA
ESSData$trstprl[ESSData$trstprl > 10] <- NA
ESSData$trstplt[ESSData$trstplt > 10] <- NA
ESSData$trstep[ESSData$trstep > 10] <- NA
ESSData$vote[ESSData$vote > 2] <- NA
ESSData$contplt[ESSData$contplt > 2] <- NA
ESSData$wrkprty[ESSData$wrkprty > 2] <- NA
ESSData$badge[ESSData$badge > 2] <- NA
ESSData$sgnptit[ESSData$sgnptit > 2] <- NA
ESSData$pbldmn[ESSData$pbldmn > 2] <- NA
ESSData$bctprd[ESSData$bctprd > 2] <- NA
ESSData$clsprty[ESSData$clsprty > 2] <- NA
ESSData$mbtru[ESSData$mbtru > 3] <- NA
ESSData$pdjobev[ESSData$pdjobev > 2] <- NA
ESSData$gndr[ESSData$gndr > 2] <- NA
ESSData$eisced[ESSData$eisced == 0] <- NA
ESSData$eisced[ESSData$eisced >= 55] <- NA
ESSData$stfdem[ESSData$stfdem > 10] <- NA
## Make gndr a dummy ##
ESSData$gndr[ESSData$gndr == 1] <- 0 # Male == 0
ESSData$gndr[ESSData$gndr == 2] <- 1 # Female == 1
table(ESSData$gndr)
ESSData$TIME[ESSData$essround == 1] <- 2002
ESSData$TIME[ESSData$essround == 2] <- 2004
ESSData$TIME[ESSData$essround == 3] <- 2006
ESSData$TIME[ESSData$essround == 4] <- 2008
ESSData$TIME[ESSData$essround == 5] <- 2010
ESSData$TIME[ESSData$essround == 6] <- 2012
View(ESSData)
View(ESSData)
table(ESSData$essround)
ESSData$TIME[ESSData$essround == 6] <- 2014
table(ESSData$TIME)
ESSData$TIME[ESSData$essround == 6] <- 2012
ESSData$TIME[ESSData$essround == 7] <- 2014
table(ESSData$TIME)
table(ESSData$essround)
library(countrycode)
eu$cntry <- countrycode(eu$GEO, "country.name", "iso2c")
ESSData$unempdummy <- 0
ESSData$unempdummy <- ifelse(ESSData$uempla ==1 | ESSData$uempli ==1, 1, 0)
table(ESSData$unempdummy) # to verify only 0 or 1 in that variable
ESSData$unempdummy <- as.numeric(ESSData$unempdummy)
class(ESSData$unempdummy)
ESSData$votedummy <- 0
ESSData$votedummy <- ifelse(ESSData$vote == 1, 1, 0)
table(ESSData$votedummy) # to verify only 0 or 1 in that variable
ESSData$uniondummy <- 0
ESSData$uniondummy <- ifelse(ESSData$mbtru == 1| ESSData$mbtru == 2, 1, 0)
table(ESSData$uniondummy)
ESSData$pbldmndummy <- 0
ESSData$pbldmndummy <- ifelse(ESSData$pbldmn == 1, 1, 0)
table(ESSData$pbldmndummy)
## Group Data ##
GroupedESS <- group_by(ESSData, cntry, TIME) # Group the ESS Data by country and year
MeansESS <- summarize(GroupedESS, avgpolintr = mean(polintr, na.rm=T), avgtrstprl = mean(trstprl, na.rm=T),
table(ESSData$pbldmndummy)
table(ESSData$pbldmndummy)
library(stargazer)  # for summary statistics and regression tables
library(magrittr)  # for 'piping': more readable code
library(ggplot2)  # the ggplot2 package provides nice function for plotting
library(arm)  # for the sim() function to simulate model estimates
library(interplot)  # for plotting interactions
library(dplyr)  # for data manipulation
library(plm)
library(foreign)
library(sjPlot)
GroupedESS <- group_by(ESSData, cntry, TIME) # Group the ESS Data by country and year
MeansESS <- summarize(GroupedESS, avgpolintr = mean(polintr, na.rm=T), avgtrstprl = mean(trstprl, na.rm=T),
table(ESSData$pbldmndummy)
table(ESSData$pbldmndummy)
MeansESS <- summarize(GroupedESS, avgpolintr = mean(polintr, na.rm=T), avgtrstprl = mean(trstprl, na.rm=T),
avgtrstplt = mean(trstplt, na.rm=T), avgtrstep = mean(trstep, na.rm=T),
avgvote = mean(vote, na.rm=T), avgcontplt = mean(contplt, na.rm=T),
avgwrkprty = mean(wrkprty, na.rm=T), avgwrkorg = mean(wrkorg, na.rm=T),
avgbadge = mean(badge, na.rm=T), avgsgnptit = mean(sgnptit, na.rm=T),
avgpbldmn = mean(pbldmn, na.rm=T), avgbctprd = mean(bctprd, na.rm=T),
avgclsprty = mean(clsprty, na.rm=T), avgmmbprty = mean(mmbprty, na.rm=T),
avgunemp = mean(unempdummy, na.rm = T), avgunion = mean(uniondummy, na.rm = T),
avgeeisced = mean(eisced, na.rm=T), avgdsbld = mean(dsbld, na.rm=T),
avgstfdem = mean(stfdem, na.rm = T))
YouthData <- merge(MeansESS, eu, by = c("cntry", "TIME"), all = T)
View(YouthData)
Unemp0810 <- subset(eu, eu$TIME==2008 | eu$TIME==2010)
Unemp0810$TIME <- factor(Unemp0810$TIME) # Ensure year is treated as levels, not as continuous numbers
Unemp0810 <- group_by(Unemp0810, cntry, TIME)
Unemp0810$Value <- as.numeric(as.character(Unemp0810$Value)) # Ensure all the unemployment value are numerics
ggplot(data=Unemp0810, aes(x=cntry, y=Value, fill=TIME)) + geom_bar(stat="identity", position=position_dodge()) + labs(x="Country", y="Unemployment Rate (% of active population)") + ggtitle("Youth Unemployment Rates in Europe, 2008 - 2010")
compare <- subset(YouthData, YouthData$cntry == "DE"|YouthData$cntry == "DK"|YouthData$cntry == "ES"|YouthData$cntry == "FR"|YouthData$cntry == "HU"|YouthData$cntry == "IE"|YouthData$cntry == "NL")
ggplot(data = compare, aes(x=TIME, y=avgpolintr)) + geom_line(aes(colour=cntry)) + scale_x_continuous(name="Years", breaks = c(2002, 2004, 2006, 2008, 2010, 2012),labels=c("2002","2004","2006","2008","2010","2012"), limits = c(2002,2012))
compare <- subset(YouthData, YouthData$cntry == "DE"|YouthData$cntry == "DK"|YouthData$cntry == "ES"|YouthData$cntry == "FR"|YouthData$cntry == "HU"|YouthData$cntry == "IE"|YouthData$cntry == "NL")
ggplot(data = compare, aes(x=TIME, y=avgpolintr)) + geom_line(aes(colour=cntry)) + scale_x_continuous(name="Years", breaks = c(2002, 2004, 2006, 2008, 2010, 2012, 2014),labels=c("2002","2004","2006","2008","2010","2012", "2014"), limits = c(2002,2014))
compare <- subset(YouthData, YouthData$cntry == "DE"|YouthData$cntry == "DK"|YouthData$cntry == "ES"|YouthData$cntry == "FR"|YouthData$cntry == "HU"|YouthData$cntry == "IE"|YouthData$cntry == "NL")
ggplot(data = compare, aes(x=TIME, y=avgpolintr)) + geom_line(aes(colour=cntry)) + scale_x_continuous(name="Years", breaks = c(2002, 2004, 2006, 2008, 2010, 2012, 2014),labels=c("2002","2004","2006","2008","2010","2012", "2014"), limits = c(2002,2014) + labs(x="Years", y="Average political interest") + ggtitle("Political interest over the years, 2002 - 2014"))
compare <- subset(YouthData, YouthData$cntry == "DE"|YouthData$cntry == "DK"|YouthData$cntry == "ES"|YouthData$cntry == "FR"|YouthData$cntry == "HU"|YouthData$cntry == "IE"|YouthData$cntry == "NL")
ggplot(data = compare, aes(x=TIME, y=avgpolintr)) + geom_line(aes(colour=cntry)) + scale_x_continuous(name="Years", breaks = c(2002, 2004, 2006, 2008, 2010, 2012, 2014),labels=c("2002","2004","2006","2008","2010","2012", "2014"), limits = c(2002,2014)) + labs(x="Years", y="Average political interest") + ggtitle("Political interest over the years, 2002 - 2014")
table(ESSData$avgpolintr, ESSData$cntry)
summary(ESSData$avgpolintr)
View(YouthData)
table(YouthData$avgpolintr, YouthData$cntry)
summary(YouthData$avgpolintr)
max(YouthData$avgpolintr, na.rm = T)
View(YouthData)
max(YouthData$avgpolintr[YouthData$TIME == 2002], na.rm = T)
YouthData$avgpolintr[YouthData$TIME == 2002]
mat[4,2]
YouthData$cntry[YouthData$TIME == 2002]
View(YouthData)
min(YouthData$avgpolintr[YouthData$TIME == 2002], na.rm = T)
min(YouthData$avgpolintr[YouthData$TIME == 2014], na.rm = T)
YouthData$avgpolintr[YouthData$TIME == 2014]
YouthData$cntry[YouthData$TIME == 2014]
View(YouthData)
max(YouthData$avgpolintr[YouthData$TIME == 2014], na.rm = T)
View(YouthData)
summary(YouthData$avgpbldmn)
summary(YouthData$avgvote)
ggplot(data = YouthData, aes(x=TIME, y=avgpbldmn)) + geom_line(aes(colour=cntry)) + scale_x_continuous(name="Years", breaks = c(2002, 2004, 2006, 2008, 2010, 2012, 2014),labels=c("2002","2004","2006","2008","2010","2012", "2014"), limits = c(2002,2014)) + labs(x="Years", y="Average political interest") + ggtitle("Political interest over the years, 2002 - 2014")
ggplot(data = YouthData, aes(x=TIME, y=avgvote)) + geom_line(aes(colour=cntry)) + scale_x_continuous(name="Years", breaks = c(2002, 2004, 2006, 2008, 2010, 2012, 2014),labels=c("2002","2004","2006","2008","2010","2012", "2014"), limits = c(2002,2014)) + labs(x="Years", y="Average political interest") + ggtitle("Political interest over the years, 2002 - 2014")
View(ESSData)
table(ESSData$pbldmn)
View(eu)
getwd()
setwd("C:/Users/hp/Documents/GitHub/Final-paper")
